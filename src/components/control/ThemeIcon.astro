---
import { Icon } from "astro-icon/components";
---

<button id="themeToggle" title="切换明暗模式" class="focus:outline-none flex items-center justify-center w-10 h-10 hover:bg-[var(--navi-link-hover-bg-color)] rounded-lg cursor-pointer">
    <Icon name="material-symbols:wb-sunny-rounded" class="moon w-5 h-5"/>
    <Icon name="material-symbols:clear-day-rounded" class="sun w-5 h-5"/>
</button>


<script is:inline>
const htmlRoot = document.querySelector('html');
const themeToggle = document.getElementById('themeToggle');

const theme = (() => {
    const localStorageTheme = localStorage?.getItem("theme") ?? '';
    if (['dark', 'light'].includes(localStorageTheme)) {
        return localStorageTheme;
    }
    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
        return 'dark';
    }
    return 'light';
})();

const setTheme = (themeSet) => { 
    if (themeSet === 'dark') {
        htmlRoot.setAttribute('data-theme', 'dark');
    } else {
        htmlRoot.removeAttribute('data-theme');
    }
    window.localStorage.setItem('theme', themeSet);
};
setTheme(theme);

const handleToggleClick = () => {
    const currentTheme = htmlRoot.getAttribute('data-theme');
    const isDark = currentTheme === 'dark';
    setTheme(isDark ? 'light' : 'dark');
}

themeToggle?.addEventListener("click", handleToggleClick);
</script>

<style>
    #themeToggle .moon {
        display: none;
    }
    
    #themeToggle .sun {
        display: inline-block;
    }
    
    html[data-theme="dark"] #themeToggle .moon {
        display: inline-block;
    }
    
    html[data-theme="dark"] #themeToggle .sun {
        display: none;
    }
</style>